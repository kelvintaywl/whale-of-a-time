version: 2.1

defaults:
  environment: &environment
    DOCKER_REGISTRY: docker.io
    DOCKER_USER: kelvintaywl

jobs:
  sidecar_containers_tests:
    docker:
      # main container
      - image: cimg/node:lts
        environment:
          POSTGRES_DB: wiki
          POSTGRES_USER: Free
          POSTGRES_PASSWORD: Willy
      # sidecar containers
      - image: library/postgres:13
        environment:
          POSTGRES_DB: wiki
          POSTGRES_USER: Free
          POSTGRES_PASSWORD: Willy
      - image: postgrest/postgrest:v10.1.1
        environment:
          PGRST_DB_URI: postgres://Free:Willy@127.0.0.1:5432/wiki
          PGRST_DB_SCHEMA: public
          PGRST_DB_ANON_ROLE: Free
          PGRST_OPENAPI_SERVER_PROXY_URI: "http://127.0.0.1:3000"
    steps:
      - checkout
      - run: sudo apt-get install postgresql-client
      - run:
          name: Run SQL schema migrations
          command: |
            psql -U $POSTGRES_USER -d $POSTGRES_DB -h 127.0.0.1 -p 5432 -f postgres/init/schema.sql
      - run: sudo npm install -g newman
      - run:
          # Showcase another way to check on our server, besides dockerize
          name: Wait on application to be ready
          command: |
            N=8
            while [ $N -gt 0 ]
            do
              if $(nc -z localhost 3000); then
                echo "Connected!"
                exit 0
              fi
              echo "Not connected; retrying"
              N=$(( $N - 1 ))
              sleep 1
            done
            exit 1
      - run:
          name: Run integration tests with Newman
          command: |
            newman run postman_collections/Postgrest.json

workflows:
  sidecar_containers:
    jobs:
      - sidecar_containers_tests
