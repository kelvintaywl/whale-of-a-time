version: 2.1

executors:
  docker:
    docker:
      - image: cimg/base:current
  machine:
    machine:
      image: ubuntu-2204:2023.02.1

commands:
  docker_compose_test:
    steps:
      - run: |
          docker version
          docker-compose version
      - checkout
      - run:
          name: Spin up services with Docker Compose
          command: |
            # set prefix to "whale-of-a-time" for names of our services
            docker-compose -p whale-of-a-time up -d
      - run:
          background: true
          name: Inspect server logs (background)
          command: |
            while true; do
              sleep 2
              docker logs whale-of-a-time-server-1
              echo "======"
            done
      - run:
          # Showcase another way to check on our server, besides dockerize
          name: Wait on application to be ready
          command: |
            N=8
            while [ $N -gt 0 ]
            do
              if $(nc -z localhost 3000); then
                echo "Connected!"
                exit 0
              fi
              echo "Not connected; retrying"
              N=$(( $N - 1 ))
              sleep 1
            done
            exit 1
      - run:
          name: Run integration tests with Newman
          command: |
            docker ps

            # Newman is a test runner for Postman collections
            # Here, we attach our newman container to the same network as our app server
            # so it can look up the app server at localhost:3000.
            # Alternatively, we could have installed Newman on this local machine
            # and it would be able to access the exposed app server at localhost:3000 too.
            # I wanted to demonstrate how containers can talk to one another if they are in the same network.
            docker container run --network container:whale-of-a-time-server-1 \
            -v $(pwd)/postman_collections:/etc/newman \
            -t postman/newman \
            run /etc/newman/Postgrest.json

jobs:
  docker_compose_test_machine:
    executor: machine
    steps:
      - docker_compose_test
  docker_compose_test_remote_docker:
    executor: docker
    steps:
      - setup_remote_docker:
          version: '20.10.18'
      - docker_compose_test


workflows:
  compose_tests:
    jobs:
      - docker_compose_test_machine
      - docker_compose_test_remote_docker
